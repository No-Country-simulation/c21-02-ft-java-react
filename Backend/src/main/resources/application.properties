spring.application.name=Casinop2p
server.servlet.context-path=/api/v1
spring.config.import=optional:file:.env[.properties]
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never
spring.sql.init.data-locations=classpath:data.sql

#===== CLOUDINARY ==========

cloudinary.cloud_name=${KEY_NAME}
cloudinary.api_key=${API_KEY}
cloudinary.api_secret=${API_SECRET}



#=====POSTGRESQL LOCAL santy==========

#spring.datasource.url=jdbc:postgresql://localhost:5432/casino_db?serverTimezone=America/Argentina/Buenos_Aires
#spring.datasource.username=postgres
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

#=====POSTGRESQL remoto==========

spring.datasource.url=jdbc:postgresql://dpg-cs2u1iu8ii6s738c68ng-a.oregon-postgres.render.com:5432/casino_db_ngog
spring.datasource.username=casino_db_ngog_user
spring.datasource.password=17fqHw97C23s428Cn8xFSdSZLprdcv2G
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
#=================================================================


